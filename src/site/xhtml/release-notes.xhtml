<html>
<head>
<title>IDS Server Release Notes</title>
</head>
<body>

	<h1>IDS Server Release Notes</h1>

	<h2>1.6.0</h2>
	<p>Allow maxEntities to be specified.</p>
	<ul>
		<li>Allow maxEntities to be specified. This requires a new
			property maxEntities which should match (or be less than that set in
			the icat.server). The next icat.server can be queried to find the
			value that has been set so this property is temporary</li>
		<li>The messages from the file checker have been improved when
			storage is by dataset and a zip file is found to be corrupt.</li>
		<li>Now waits for ICAT connection if ICAT not available at
			startup.</li>
		<li>Protect against non numeric values being passed to the put
			call.</li>
		<li>Produces JMS logging for all calls as specified in the
			ids.properties file</li>
		<li>Moved to the latest icat.utils to support multiple containers</li>
		<li>Uses logback via slf4j rather than log4j via slf4j</li>
	</ul>

	<h2>1.5.0</h2>
	<p>New getDatafileIds, getIcatUrl and improved performance of
		prepareData.</p>
	<ul>
		<li>Added getDatafileIds call.</li>
		<li>Improved performance of prepareData by performing some
			operations asynchronously.</li>
		<li>Changed values of filesCheck.lastIdFile and
			filesCheck.errorLog to be relative to ../data/ids rather than
			../data/icat in the ids.properties.example file.</li>
		<li>getStatus allows sessionId to be null.</li>
	</ul>

	<h2>1.4.0</h2>
	<p>New getIcatUrl and now uses icat 4.5 client.</p>
	<ul>
		<li>Bug fix release to fix handling of corrupt
			filesCheck.lastIdFile file.</li>
		<li>Work with icat 4.5</li>
		<li>Added getIcatUrl call.</li>
		<li>All calls now produce CORS headers.</li>
	</ul>

	<h2>1.3.1</h2>
	<p>Bug fix release to fix file handle leak.</p>
	<ul>
		<li>Minor corrections to the documentation.</li>
		<li>Ensure that files are closed when returned individually.</li>
		<li>Remove redundant (and possibly dangerous) line of code from
			DsWriter.</li>
	</ul>

	<h2>1.3.0</h2>
	<p>Add getApiVersion call, make major change to prepareData, make
		it also support archive by datafile and provide the option of
		protecting Datafile.location with a cryptographic hash.</p>
	<ul>
		<li>getApiVersion call added to return version of server</li>
		<li>ids.properties values: preparedCacheSize1024bytes,
			datasetCacheSize1024bytes, compressDatasetCache, and
			tolerateWrongCompression are no longer used.</li>
		<li>ids.properties value preparedCount has changed its meaning.</li>
		<li>ids.properties value tidyBlockSize has been added.</li>
		<li>ids.properties value maxIdsInQuery has been added.</li>
		<li>The json string returned by getServiceStatus has changed.</li>
		<li>The Datafile.location value can be protected by a
			cryptographic hash. This is enabled by adding a property "key" to the
			ids.properties file.</li>
	</ul>

	<h2>1.2.0</h2>
	<p>For two level storage clean up main storage as needed.</p>
	<ul>
		<li>Add parameters: startArchivingLevel1024bytes,
			stopArchivingLevel1024bytes and linkLifetimeSeconds.</li>
		<li>Cope with some obscure file checker errors.</li>
		<li>Datasets are archived when main storage becomes too full.</li>
	</ul>

	<h2>1.1.0</h2>
	<p>Provide background file checking and facility control of
		returned zip file structure.</p>
	<ul>
		<li>Another file handle leak fixed.</li>
		<li>Compatible with plugin interface 1.1.0.</li>
		<li>Provide background file checking - which requires that the
			parameter checkFiles.parallelCount is set to an integer. If the
			integer is non zero then other entries must be set in the
			ids.properties file.</li>
		<li>ids.properties needs a new parameter: plugin.zipMapper.class
			which identifies the code to define the zip file structure.</li>
	</ul>

	<h2>1.0.1</h2>
	<p>Bug fix release.</p>
	<ul>
		<li>Files are now being closed properly to avoid running out of
			file handles.</li>
	</ul>

	<h2>1.0.0</h2>
	<p>Initial public release.</p>

</body>
</html>