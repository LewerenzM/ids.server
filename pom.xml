<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.icatproject</groupId>
	<artifactId>IDS</artifactId>
	<packaging>war</packaging>
	<version>0.0</version>
	<name>IDS Java EE 6 Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<ids.version>1.0</ids.version>
	</properties>
	<repositories>
		<repository>
			<id>java.net2</id>
			<name>Repository hosting the jee6 artifacts</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
			<id>eclipselink</id>
			<layout>default</layout>
			<name>Repository for library Library[eclipselink]</name>
		</repository>
		<repository>
			<id>ICAT Repo</id>
			<url>http://www.icatproject.org/mvn/repo</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-bundle</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>2.4.1</version>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.icatproject</groupId>
			<artifactId>idsclient</artifactId>
			<version>${ids.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.icatproject</groupId>
			<artifactId>icat.client</artifactId>
			<version>4.2.5</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.1</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<webResources>
						<resource>
							<directory>src</directory>
							<targetPath>WEB-INF</targetPath>
							<includes>
								<include>wsdl/**</include>
							</includes>
						</resource>
						<resource>
							<directory>src/main/resources/META-INF</directory>
							<targetPath>WEB-INF/classes/META-INF</targetPath>
							<includes>
								<include>**/**</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxws-maven-plugin</artifactId>
				<version>1.10</version>
				<executions>
					<execution>
						<goals>
							<goal>wsimport</goal>
						</goals>
						<configuration>
							<wsdlFiles>
								<wsdlFile>icat42/ICAT.wsdl</wsdlFile>
							</wsdlFiles>
							<staleFile>${project.build.directory}/jaxws/stale/icat42.stale</staleFile>
							<packageName>org.icatproject.ids.icatclient.icat42</packageName>
						</configuration>
						<id>wsimport-generate-ICAT</id>
						<phase>generate-sources</phase>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>javax.xml</groupId>
						<artifactId>webservices-api</artifactId>
						<version>1.6.1</version>
					</dependency>
				</dependencies>
				<configuration>
					<sourceDestDir>${project.build.directory}/generated-sources/jaxws-wsimport</sourceDestDir>
					<xnocompile>true</xnocompile>
					<verbose>true</verbose>
					<extension>true</extension>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptors>
						<descriptor>${project.basedir}/assemble/distribution.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>jaxws-maven-plugin</artifactId>
										<versionRange>[1.10,)</versionRange>
										<goals>
											<goal>wsimport</goal>
										</goals>
										jar
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>endorsed</id>
			<activation>
				<property>
					<name>sun.boot.class.path</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.3.2</version>
						<configuration>
							<!-- javaee6 contains upgrades of APIs contained within the JDK itself. 
								As such these need to be placed on the bootclasspath, rather than classpath 
								of the compiler. If you don't make use of these new updated API, you can 
								delete the profile. On non-SUN jdk, you will need to create a similar profile 
								for your jdk, with the similar property as sun.boot.class.path in Sun's JDK. -->
							<compilerArguments>
								<bootclasspath>${settings.localRepository}/javax/javaee-endorsed-api/6.0/javaee-endorsed-api-6.0.jar${path.separator}${sun.boot.class.path}</bootclasspath>
							</compilerArguments>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>javax</groupId>
								<artifactId>javaee-endorsed-api</artifactId>
								<version>6.0</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>

