Testing IDS Locking
===================

This directory contains some tests for the new IDS locking mechanism.
I did not integrate this into the maven junit test setup, first
because I don't know how it works and how to add tests to it and
secondly because it is rather difficult to check for a positive test
result.  The effect becomes mainly visible looking into the ids.log in
Glassfish, but is hardly visible to the client.

This directory is added temporarily to the source tree and is supposed
to be removed before merging into main.


Test case test_09_ids_tidier
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This test case is part of the python-icat test suite, disabled by
default though.  It sets the Tidier under stress.  Locking is visible
in the log file, but nothing spectacular happens.


Test case race_upload_archive 1
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

This test was used to demonstrate Issue #47.  Now that this issue is
fixed, nothing spectacular happens.  One can observe that it is
possible to set more then one shared lock on the same dataset, as
expected.


Test case race_upload_archive 2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Variant of the last one with adjusted timing.  As a result, one can
observe an ARCHIVE request hold back by a shared lock on a dataset.


Test case race_writer_delete
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A delete web service call fails because a WRITE request on the same
dataset is in process.  With ids.server 1.7.0 the WRITE request would
fail instead because the file it tries to write to archive has been
deleted.


Test case race_delete_writer
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In a sense the inverse of the last one: the FSM want to process a
WRITE request while a delete web service call is still in process.
One can observe how the WRITE request is held back by the exclusive
lock on the dataset.  Again with ids.server 1.7.0 the WRITE request
would have been started and might have failed because the the files it
tries to write to archive are deleted from storage at the same time.

